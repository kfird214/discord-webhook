/**
 * @file This file is generated by scripts/inputs-generator.js.
 * @author Kfir Nisan Darshani <kfir214@gmail.com>
 */
import { InputDefinition, InputType } from '../Input';

/**
 * Webhook URL from discord. See: https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks for details
 */
export const WEBHOOK_URL: InputDefinition<InputType.String> = { name: "webhook-url", type: InputType.String, required: true };

/**
 * Message that is sent via the webhook.
 */
export const CONTENT: InputDefinition<InputType.String> = { name: "content", type: InputType.String, required: false };

/**
 * ID of the thread you want the webhook to send the message into (will automatically unarchive threads)
 */
export const THREAD_ID: InputDefinition<InputType.String> = { name: "thread-id", type: InputType.String, required: false };

/**
 * Name of the thread you want the webhook to create
 */
export const THREAD_NAME: InputDefinition<InputType.String> = { name: "thread-name", type: InputType.String, required: false };

/**
 * Message flags
 */
export const FLAGS: InputDefinition<InputType.String> = { name: "flags", type: InputType.String, required: false };

/**
 * The username that should appear to send the message. Note: username will have the "bot" badge next to their name.
 */
export const USERNAME: InputDefinition<InputType.String> = { name: "username", type: InputType.String, required: false };

/**
 * URL for the avatar that should appear with the message.
 */
export const AVATAR_URL: InputDefinition<InputType.String> = { name: "avatar-url", type: InputType.String, required: false };

/**
 * Boolean to indicate whether the webhook is text-to-speech
 */
export const TTS: InputDefinition<InputType.Boolean> = { name: "tts", type: InputType.Boolean, required: false };

/**
 * Name of a json file that will be sent as the data for the webhook
 */
export const RAW_DATA: InputDefinition<InputType.JsonFile> = { name: "raw-data", type: InputType.JsonFile, required: false };

/**
 * Content of json string that will be sent as the data for the webhook
 */
export const RAW_STRING: InputDefinition<InputType.Json> = { name: "raw-string", type: InputType.Json, required: false };

/**
 * Name of a file that will be uploaded via the webhook
 */
export const FILENAME: InputDefinition<InputType.Stream> = { name: "filename", type: InputType.Stream, required: false };

/**
 * Embed title
 */
export const EMBED_TITLE: InputDefinition<InputType.String> = { name: "embed-title", type: InputType.String, required: false };

/**
 * Embed URL
 */
export const EMBED_URL: InputDefinition<InputType.Url> = { name: "embed-url", type: InputType.Url, required: false };

/**
 * Embed description
 */
export const EMBED_DESCRIPTION: InputDefinition<InputType.String> = { name: "embed-description", type: InputType.String, required: false };

/**
 * Embed timestamp (ISO8601 format)
 */
export const EMBED_TIMESTAMP: InputDefinition<InputType.Timestamp> = { name: "embed-timestamp", type: InputType.Timestamp, required: false };

/**
 * Embed color
 */
export const EMBED_COLOR: InputDefinition<InputType.Color> = { name: "embed-color", type: InputType.Color, required: false };

/**
 * Embed footer text
 */
export const EMBED_FOOTER_TEXT: InputDefinition<InputType.String> = { name: "embed-footer-text", type: InputType.String, required: false };

/**
 * Embed footer icon url
 */
export const EMBED_FOOTER_ICON_URL: InputDefinition<InputType.Url> = { name: "embed-footer-icon-url", type: InputType.Url, required: false };

/**
 * Embed image url
 */
export const EMBED_IMAGE_URL: InputDefinition<InputType.Url> = { name: "embed-image-url", type: InputType.Url, required: false };

/**
 * Embed thumbnail url
 */
export const EMBED_THUMBNAIL_URL: InputDefinition<InputType.Url> = { name: "embed-thumbnail-url", type: InputType.Url, required: false };

/**
 * Embed author name
 */
export const EMBED_AUTHOR_NAME: InputDefinition<InputType.String> = { name: "embed-author-name", type: InputType.String, required: false };

/**
 * Embed author url
 */
export const EMBED_AUTHOR_URL: InputDefinition<InputType.Url> = { name: "embed-author-url", type: InputType.Url, required: false };

/**
 * Embed author icon
 */
export const EMBED_AUTHOR_ICON_URL: InputDefinition<InputType.Url> = { name: "embed-author-icon-url", type: InputType.Url, required: false };

/**
 * Embed fields (custom format)
 *   - inline field 1
 *   inline field 2
 *   . none inline field 3
 * 
 */
export const EMBED_FIELDS: InputDefinition<InputType.String> = { name: "embed-fields", type: InputType.String, required: false };

